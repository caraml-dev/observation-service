name: Services Release

on:
  workflow_call:
    inputs:
      container_registry:
        type: string
        required: false
        default: ghcr.io
      environment:
        type: string
        required: false
    secrets:
      ghcr_token:
        required: true

env:
  ARTIFACT_RETENTION_DAYS: 7

jobs:
  build-observation-service:
    runs-on: ubuntu-latest
    env:
      APP_NAME: observation-service
      DOCKER_FILE: images/observation-service/Dockerfile
    outputs:
      api-version: ${{ steps.build-image.outputs.api-version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build Docker image
        id: build-image
        run: |
          set -o pipefail
          make BIN_NAME=$APP_NAME DOCKER_FILE=$DOCKER_FILE build-image | tee output.log
          echo "::set-output name=api-version::$(sed -n 's%API version: \(.*\)%\1%p' output.log)"

      - name: Save Docker image
        run: |
          docker image save \
            --output observation-service.${{ steps.build-image.outputs.api-version }}.tar \
            observation-service:${{ steps.build-image.outputs.api-version }}

      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: observation-service.${{ steps.build-image.outputs.api-version }}.tar
          path: observation-service.${{ steps.build-image.outputs.api-version }}.tar
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

  publish-observation-service:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs:
      - build-observation-service
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.container_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.ghcr_token }}
      
      - name: Download Docker image tar
        uses: actions/download-artifact@v2
        with:
          name: observation-service.${{ needs.build-observation-service.outputs.api-version }}.tar

      - name: Publish Docker Image
        env:
          DOCKER_REPOSITORY: ${{ inputs.container_registry }}/${{ github.repository }}
        run: |
          docker image load --input observation-service.${{ needs.build-observation-service.outputs.api-version }}.tar
          docker tag \
            observation-service:${{ needs.build-observation-service.outputs.api-version }} \
            ${{ env.DOCKER_REPOSITORY }}/observation-service:${{ needs.build-observation-service.outputs.api-version }}
          docker push ${{ env.DOCKER_REPOSITORY }}/observation-service:${{ needs.build-observation-service.outputs.api-version }}
