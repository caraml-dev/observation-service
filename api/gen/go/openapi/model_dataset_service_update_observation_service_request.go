/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DatasetServiceUpdateObservationServiceRequest Request message for UpdateObservationService method.
type DatasetServiceUpdateObservationServiceRequest struct {
	ObservationService *V1ObservationServiceConfig `json:"observationService,omitempty"`
}

// NewDatasetServiceUpdateObservationServiceRequest instantiates a new DatasetServiceUpdateObservationServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatasetServiceUpdateObservationServiceRequest() *DatasetServiceUpdateObservationServiceRequest {
	this := DatasetServiceUpdateObservationServiceRequest{}
	return &this
}

// NewDatasetServiceUpdateObservationServiceRequestWithDefaults instantiates a new DatasetServiceUpdateObservationServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatasetServiceUpdateObservationServiceRequestWithDefaults() *DatasetServiceUpdateObservationServiceRequest {
	this := DatasetServiceUpdateObservationServiceRequest{}
	return &this
}

// GetObservationService returns the ObservationService field value if set, zero value otherwise.
func (o *DatasetServiceUpdateObservationServiceRequest) GetObservationService() V1ObservationServiceConfig {
	if o == nil || o.ObservationService == nil {
		var ret V1ObservationServiceConfig
		return ret
	}
	return *o.ObservationService
}

// GetObservationServiceOk returns a tuple with the ObservationService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatasetServiceUpdateObservationServiceRequest) GetObservationServiceOk() (*V1ObservationServiceConfig, bool) {
	if o == nil || o.ObservationService == nil {
		return nil, false
	}
	return o.ObservationService, true
}

// HasObservationService returns a boolean if a field has been set.
func (o *DatasetServiceUpdateObservationServiceRequest) HasObservationService() bool {
	if o != nil && o.ObservationService != nil {
		return true
	}

	return false
}

// SetObservationService gets a reference to the given V1ObservationServiceConfig and assigns it to the ObservationService field.
func (o *DatasetServiceUpdateObservationServiceRequest) SetObservationService(v V1ObservationServiceConfig) {
	o.ObservationService = &v
}

func (o DatasetServiceUpdateObservationServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObservationService != nil {
		toSerialize["observationService"] = o.ObservationService
	}
	return json.Marshal(toSerialize)
}

type NullableDatasetServiceUpdateObservationServiceRequest struct {
	value *DatasetServiceUpdateObservationServiceRequest
	isSet bool
}

func (v NullableDatasetServiceUpdateObservationServiceRequest) Get() *DatasetServiceUpdateObservationServiceRequest {
	return v.value
}

func (v *NullableDatasetServiceUpdateObservationServiceRequest) Set(val *DatasetServiceUpdateObservationServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDatasetServiceUpdateObservationServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDatasetServiceUpdateObservationServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatasetServiceUpdateObservationServiceRequest(val *DatasetServiceUpdateObservationServiceRequest) *NullableDatasetServiceUpdateObservationServiceRequest {
	return &NullableDatasetServiceUpdateObservationServiceRequest{value: val, isSet: true}
}

func (v NullableDatasetServiceUpdateObservationServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatasetServiceUpdateObservationServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


