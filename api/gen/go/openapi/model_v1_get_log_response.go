/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1GetLogResponse Response message for GetLog method.
type V1GetLogResponse struct {
	Log *V1Log `json:"log,omitempty"`
}

// NewV1GetLogResponse instantiates a new V1GetLogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetLogResponse() *V1GetLogResponse {
	this := V1GetLogResponse{}
	return &this
}

// NewV1GetLogResponseWithDefaults instantiates a new V1GetLogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetLogResponseWithDefaults() *V1GetLogResponse {
	this := V1GetLogResponse{}
	return &this
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *V1GetLogResponse) GetLog() V1Log {
	if o == nil || o.Log == nil {
		var ret V1Log
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetLogResponse) GetLogOk() (*V1Log, bool) {
	if o == nil || o.Log == nil {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *V1GetLogResponse) HasLog() bool {
	if o != nil && o.Log != nil {
		return true
	}

	return false
}

// SetLog gets a reference to the given V1Log and assigns it to the Log field.
func (o *V1GetLogResponse) SetLog(v V1Log) {
	o.Log = &v
}

func (o V1GetLogResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Log != nil {
		toSerialize["log"] = o.Log
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetLogResponse struct {
	value *V1GetLogResponse
	isSet bool
}

func (v NullableV1GetLogResponse) Get() *V1GetLogResponse {
	return v.value
}

func (v *NullableV1GetLogResponse) Set(val *V1GetLogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetLogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetLogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetLogResponse(val *V1GetLogResponse) *NullableV1GetLogResponse {
	return &NullableV1GetLogResponse{value: val, isSet: true}
}

func (v NullableV1GetLogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetLogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


