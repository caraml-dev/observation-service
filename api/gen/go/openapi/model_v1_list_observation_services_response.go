/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListObservationServicesResponse Response message for ListObservationServices method.
type V1ListObservationServicesResponse struct {
	// Observation Services deployed by Dataset Service for a particular CaraML project.
	ObservationServices []V1ObservationServiceConfig `json:"observationServices,omitempty"`
}

// NewV1ListObservationServicesResponse instantiates a new V1ListObservationServicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListObservationServicesResponse() *V1ListObservationServicesResponse {
	this := V1ListObservationServicesResponse{}
	return &this
}

// NewV1ListObservationServicesResponseWithDefaults instantiates a new V1ListObservationServicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListObservationServicesResponseWithDefaults() *V1ListObservationServicesResponse {
	this := V1ListObservationServicesResponse{}
	return &this
}

// GetObservationServices returns the ObservationServices field value if set, zero value otherwise.
func (o *V1ListObservationServicesResponse) GetObservationServices() []V1ObservationServiceConfig {
	if o == nil || o.ObservationServices == nil {
		var ret []V1ObservationServiceConfig
		return ret
	}
	return o.ObservationServices
}

// GetObservationServicesOk returns a tuple with the ObservationServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListObservationServicesResponse) GetObservationServicesOk() ([]V1ObservationServiceConfig, bool) {
	if o == nil || o.ObservationServices == nil {
		return nil, false
	}
	return o.ObservationServices, true
}

// HasObservationServices returns a boolean if a field has been set.
func (o *V1ListObservationServicesResponse) HasObservationServices() bool {
	if o != nil && o.ObservationServices != nil {
		return true
	}

	return false
}

// SetObservationServices gets a reference to the given []V1ObservationServiceConfig and assigns it to the ObservationServices field.
func (o *V1ListObservationServicesResponse) SetObservationServices(v []V1ObservationServiceConfig) {
	o.ObservationServices = v
}

func (o V1ListObservationServicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObservationServices != nil {
		toSerialize["observationServices"] = o.ObservationServices
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListObservationServicesResponse struct {
	value *V1ListObservationServicesResponse
	isSet bool
}

func (v NullableV1ListObservationServicesResponse) Get() *V1ListObservationServicesResponse {
	return v.value
}

func (v *NullableV1ListObservationServicesResponse) Set(val *V1ListObservationServicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListObservationServicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListObservationServicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListObservationServicesResponse(val *V1ListObservationServicesResponse) *NullableV1ListObservationServicesResponse {
	return &NullableV1ListObservationServicesResponse{value: val, isSet: true}
}

func (v NullableV1ListObservationServicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListObservationServicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


