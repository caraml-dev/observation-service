// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        (unknown)
// source: caraml/timber/v1/log_metadata.proto

package api

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LogType supported by UPI
type LogMetadataType int32

const (
	LogMetadataType_LOG_METADATA_TYPE_UNSPECIFIED LogMetadataType = 0
	// Log from Prediction service
	LogMetadataType_LOG_METADATA_TYPE_PREDICTION LogMetadataType = 1
	// Log from Observation service
	LogMetadataType_LOG_METADATA_TYPE_OBSERVATION LogMetadataType = 2
	// Log from Router service
	LogMetadataType_LOG_METADATA_TYPE_ROUTER LogMetadataType = 3
)

// Enum value maps for LogMetadataType.
var (
	LogMetadataType_name = map[int32]string{
		0: "LOG_METADATA_TYPE_UNSPECIFIED",
		1: "LOG_METADATA_TYPE_PREDICTION",
		2: "LOG_METADATA_TYPE_OBSERVATION",
		3: "LOG_METADATA_TYPE_ROUTER",
	}
	LogMetadataType_value = map[string]int32{
		"LOG_METADATA_TYPE_UNSPECIFIED": 0,
		"LOG_METADATA_TYPE_PREDICTION":  1,
		"LOG_METADATA_TYPE_OBSERVATION": 2,
		"LOG_METADATA_TYPE_ROUTER":      3,
	}
)

func (x LogMetadataType) Enum() *LogMetadataType {
	p := new(LogMetadataType)
	*p = x
	return p
}

func (x LogMetadataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogMetadataType) Descriptor() protoreflect.EnumDescriptor {
	return file_caraml_timber_v1_log_metadata_proto_enumTypes[0].Descriptor()
}

func (LogMetadataType) Type() protoreflect.EnumType {
	return &file_caraml_timber_v1_log_metadata_proto_enumTypes[0]
}

func (x LogMetadataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogMetadataType.Descriptor instead.
func (LogMetadataType) EnumDescriptor() ([]byte, []int) {
	return file_caraml_timber_v1_log_metadata_proto_rawDescGZIP(), []int{0}
}

// LogProducer describes the service that generates the log
type LogProducer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the producer.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the producer, dependent on the type of the log.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Name of the CaraML project that hosts the producer.
	Project string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *LogProducer) Reset() {
	*x = LogProducer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caraml_timber_v1_log_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogProducer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogProducer) ProtoMessage() {}

func (x *LogProducer) ProtoReflect() protoreflect.Message {
	mi := &file_caraml_timber_v1_log_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogProducer.ProtoReflect.Descriptor instead.
func (*LogProducer) Descriptor() ([]byte, []int) {
	return file_caraml_timber_v1_log_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *LogProducer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogProducer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogProducer) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// LogMetadata is an entity/metadata in Dataset Service that represents an append-only
// data produced by ingesting the observation, prediction, or router logs
type LogMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of a log generated by a LogProducer.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the log, generated by Dataset Service.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Source of the log.
	Type LogMetadataType `protobuf:"varint,3,opt,name=type,proto3,enum=caraml.timber.v1.LogMetadataType" json:"type,omitempty"`
	// List of target names associated with a log.
	TargetNames []string `protobuf:"bytes,4,rep,name=target_names,json=targetNames,proto3" json:"target_names,omitempty"`
	// BQ table ID where the data is stored.
	BqTable string `protobuf:"bytes,5,opt,name=bq_table,json=bqTable,proto3" json:"bq_table,omitempty"`
	// Details of LogProducer that generated a log.
	LogProducer *LogProducer `protobuf:"bytes,6,opt,name=log_producer,json=logProducer,proto3" json:"log_producer,omitempty"`
}

func (x *LogMetadata) Reset() {
	*x = LogMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caraml_timber_v1_log_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMetadata) ProtoMessage() {}

func (x *LogMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_caraml_timber_v1_log_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMetadata.ProtoReflect.Descriptor instead.
func (*LogMetadata) Descriptor() ([]byte, []int) {
	return file_caraml_timber_v1_log_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *LogMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogMetadata) GetType() LogMetadataType {
	if x != nil {
		return x.Type
	}
	return LogMetadataType_LOG_METADATA_TYPE_UNSPECIFIED
}

func (x *LogMetadata) GetTargetNames() []string {
	if x != nil {
		return x.TargetNames
	}
	return nil
}

func (x *LogMetadata) GetBqTable() string {
	if x != nil {
		return x.BqTable
	}
	return ""
}

func (x *LogMetadata) GetLogProducer() *LogProducer {
	if x != nil {
		return x.LogProducer
	}
	return nil
}

var File_caraml_timber_v1_log_metadata_proto protoreflect.FileDescriptor

var file_caraml_timber_v1_log_metadata_proto_rawDesc = []byte{
	0x0a, 0x23, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2f, 0x74, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2e, 0x74, 0x69,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x4b, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xe8, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2e,
	0x74, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x71, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x71, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x40, 0x0a,
	0x0c, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2e, 0x74, 0x69, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2a,
	0x97, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x4c, 0x4f, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x4f, 0x47, 0x5f, 0x4d, 0x45,
	0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x44,
	0x49, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x4c, 0x4f, 0x47, 0x5f,
	0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x42,
	0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4c,
	0x4f, 0x47, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x10, 0x03, 0x42, 0xd1, 0x01, 0x0a, 0x14, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x42, 0x10, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x74, 0x69,
	0x6d, 0x62, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2f,
	0x74, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03,
	0x43, 0x54, 0x58, 0xaa, 0x02, 0x10, 0x43, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x2e, 0x54, 0x69, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x43, 0x61, 0x72, 0x61, 0x6d, 0x6c, 0x5c,
	0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x43, 0x61, 0x72, 0x61,
	0x6d, 0x6c, 0x5c, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x43, 0x61, 0x72, 0x61, 0x6d,
	0x6c, 0x3a, 0x3a, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_caraml_timber_v1_log_metadata_proto_rawDescOnce sync.Once
	file_caraml_timber_v1_log_metadata_proto_rawDescData = file_caraml_timber_v1_log_metadata_proto_rawDesc
)

func file_caraml_timber_v1_log_metadata_proto_rawDescGZIP() []byte {
	file_caraml_timber_v1_log_metadata_proto_rawDescOnce.Do(func() {
		file_caraml_timber_v1_log_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_caraml_timber_v1_log_metadata_proto_rawDescData)
	})
	return file_caraml_timber_v1_log_metadata_proto_rawDescData
}

var file_caraml_timber_v1_log_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_caraml_timber_v1_log_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_caraml_timber_v1_log_metadata_proto_goTypes = []interface{}{
	(LogMetadataType)(0), // 0: caraml.timber.v1.LogMetadataType
	(*LogProducer)(nil),  // 1: caraml.timber.v1.LogProducer
	(*LogMetadata)(nil),  // 2: caraml.timber.v1.LogMetadata
}
var file_caraml_timber_v1_log_metadata_proto_depIdxs = []int32{
	0, // 0: caraml.timber.v1.LogMetadata.type:type_name -> caraml.timber.v1.LogMetadataType
	1, // 1: caraml.timber.v1.LogMetadata.log_producer:type_name -> caraml.timber.v1.LogProducer
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_caraml_timber_v1_log_metadata_proto_init() }
func file_caraml_timber_v1_log_metadata_proto_init() {
	if File_caraml_timber_v1_log_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_caraml_timber_v1_log_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogProducer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caraml_timber_v1_log_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_caraml_timber_v1_log_metadata_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_caraml_timber_v1_log_metadata_proto_goTypes,
		DependencyIndexes: file_caraml_timber_v1_log_metadata_proto_depIdxs,
		EnumInfos:         file_caraml_timber_v1_log_metadata_proto_enumTypes,
		MessageInfos:      file_caraml_timber_v1_log_metadata_proto_msgTypes,
	}.Build()
	File_caraml_timber_v1_log_metadata_proto = out.File
	file_caraml_timber_v1_log_metadata_proto_rawDesc = nil
	file_caraml_timber_v1_log_metadata_proto_goTypes = nil
	file_caraml_timber_v1_log_metadata_proto_depIdxs = nil
}
