# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: caraml/timber/v1/log.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1a\x63\x61raml/timber/v1/log.proto\x12\x10\x63\x61raml.timber.v1\"K\n\x0bLogProducer\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n\x07project\x18\x03 \x01(\tR\x07project\"\xd8\x01\n\x03Log\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\x12-\n\x04type\x18\x03 \x01(\x0e\x32\x19.caraml.timber.v1.LogTypeR\x04type\x12!\n\x0ctarget_names\x18\x04 \x03(\tR\x0btargetNames\x12\x19\n\x08\x62q_table\x18\x05 \x01(\tR\x07\x62qTable\x12@\n\x0clog_producer\x18\x06 \x01(\x0b\x32\x1d.caraml.timber.v1.LogProducerR\x0blogProducer\"a\n\x15\x46luentdOutputBQConfig\x12\x18\n\x07project\x18\x01 \x01(\tR\x07project\x12\x18\n\x07\x64\x61taset\x18\x02 \x01(\tR\x07\x64\x61taset\x12\x14\n\x05table\x18\x03 \x01(\tR\x05table\"\xc3\x01\n\rFluentdConfig\x12\x37\n\x04type\x18\x01 \x01(\x0e\x32#.caraml.timber.v1.FluentdOutputTypeR\x04type\x12\x12\n\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n\x04port\x18\x03 \x01(\x05R\x04port\x12\x10\n\x03tag\x18\x04 \x01(\tR\x03tag\x12?\n\x06\x63onfig\x18\x05 \x01(\x0b\x32\'.caraml.timber.v1.FluentdOutputBQConfigR\x06\x63onfig\"\xb1\x02\n\x0bKafkaConfig\x12\x18\n\x07\x62rokers\x18\x01 \x01(\tR\x07\x62rokers\x12\x14\n\x05topic\x18\x02 \x01(\tR\x05topic\x12*\n\x11max_message_bytes\x18\x03 \x01(\x03R\x0fmaxMessageBytes\x12)\n\x10\x63ompression_type\x18\x04 \x01(\tR\x0f\x63ompressionType\x12-\n\x12\x63onnection_timeout\x18\x05 \x01(\x05R\x11\x63onnectionTimeout\x12#\n\rpoll_interval\x18\x06 \x01(\x05R\x0cpollInterval\x12G\n\x0coffset_reset\x18\x07 \x01(\x0e\x32$.caraml.timber.v1.KafkaInitialOffsetR\x0boffsetReset*k\n\x07LogType\x12\x18\n\x14LOG_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13LOG_TYPE_PREDICTION\x10\x01\x12\x18\n\x14LOG_TYPE_OBSERVATION\x10\x02\x12\x13\n\x0fLOG_TYPE_ROUTER\x10\x03*t\n\x11\x46luentdOutputType\x12#\n\x1f\x46LUENTD_OUTPUT_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n\x1a\x46LUENTD_OUTPUT_TYPE_STDOUT\x10\x01\x12\x1a\n\x16\x46LUENTD_OUTPUT_TYPE_BQ\x10\x02*~\n\x12KafkaInitialOffset\x12$\n KAFKA_INITIAL_OFFSET_UNSPECIFIED\x10\x00\x12!\n\x1dKAFKA_INITIAL_OFFSET_EARLIEST\x10\x01\x12\x1f\n\x1bKAFKA_INITIAL_OFFSET_LATEST\x10\x02\x42\xc1\x01\n\x14\x63om.caraml.timber.v1B\x08LogProtoP\x01Z=github.com/caraml-dev/timber/gen/go/caraml/timber/v1;timberv1\xa2\x02\x03\x43TX\xaa\x02\x10\x43\x61raml.Timber.V1\xca\x02\x10\x43\x61raml\\Timber\\V1\xe2\x02\x1c\x43\x61raml\\Timber\\V1\\GPBMetadata\xea\x02\x12\x43\x61raml::Timber::V1b\x06proto3')

_LOGTYPE = DESCRIPTOR.enum_types_by_name['LogType']
LogType = enum_type_wrapper.EnumTypeWrapper(_LOGTYPE)
_FLUENTDOUTPUTTYPE = DESCRIPTOR.enum_types_by_name['FluentdOutputType']
FluentdOutputType = enum_type_wrapper.EnumTypeWrapper(_FLUENTDOUTPUTTYPE)
_KAFKAINITIALOFFSET = DESCRIPTOR.enum_types_by_name['KafkaInitialOffset']
KafkaInitialOffset = enum_type_wrapper.EnumTypeWrapper(_KAFKAINITIALOFFSET)
LOG_TYPE_UNSPECIFIED = 0
LOG_TYPE_PREDICTION = 1
LOG_TYPE_OBSERVATION = 2
LOG_TYPE_ROUTER = 3
FLUENTD_OUTPUT_TYPE_UNSPECIFIED = 0
FLUENTD_OUTPUT_TYPE_STDOUT = 1
FLUENTD_OUTPUT_TYPE_BQ = 2
KAFKA_INITIAL_OFFSET_UNSPECIFIED = 0
KAFKA_INITIAL_OFFSET_EARLIEST = 1
KAFKA_INITIAL_OFFSET_LATEST = 2


_LOGPRODUCER = DESCRIPTOR.message_types_by_name['LogProducer']
_LOG = DESCRIPTOR.message_types_by_name['Log']
_FLUENTDOUTPUTBQCONFIG = DESCRIPTOR.message_types_by_name['FluentdOutputBQConfig']
_FLUENTDCONFIG = DESCRIPTOR.message_types_by_name['FluentdConfig']
_KAFKACONFIG = DESCRIPTOR.message_types_by_name['KafkaConfig']
LogProducer = _reflection.GeneratedProtocolMessageType('LogProducer', (_message.Message,), {
  'DESCRIPTOR' : _LOGPRODUCER,
  '__module__' : 'caraml.timber.v1.log_pb2'
  # @@protoc_insertion_point(class_scope:caraml.timber.v1.LogProducer)
  })
_sym_db.RegisterMessage(LogProducer)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), {
  'DESCRIPTOR' : _LOG,
  '__module__' : 'caraml.timber.v1.log_pb2'
  # @@protoc_insertion_point(class_scope:caraml.timber.v1.Log)
  })
_sym_db.RegisterMessage(Log)

FluentdOutputBQConfig = _reflection.GeneratedProtocolMessageType('FluentdOutputBQConfig', (_message.Message,), {
  'DESCRIPTOR' : _FLUENTDOUTPUTBQCONFIG,
  '__module__' : 'caraml.timber.v1.log_pb2'
  # @@protoc_insertion_point(class_scope:caraml.timber.v1.FluentdOutputBQConfig)
  })
_sym_db.RegisterMessage(FluentdOutputBQConfig)

FluentdConfig = _reflection.GeneratedProtocolMessageType('FluentdConfig', (_message.Message,), {
  'DESCRIPTOR' : _FLUENTDCONFIG,
  '__module__' : 'caraml.timber.v1.log_pb2'
  # @@protoc_insertion_point(class_scope:caraml.timber.v1.FluentdConfig)
  })
_sym_db.RegisterMessage(FluentdConfig)

KafkaConfig = _reflection.GeneratedProtocolMessageType('KafkaConfig', (_message.Message,), {
  'DESCRIPTOR' : _KAFKACONFIG,
  '__module__' : 'caraml.timber.v1.log_pb2'
  # @@protoc_insertion_point(class_scope:caraml.timber.v1.KafkaConfig)
  })
_sym_db.RegisterMessage(KafkaConfig)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\024com.caraml.timber.v1B\010LogProtoP\001Z=github.com/caraml-dev/timber/gen/go/caraml/timber/v1;timberv1\242\002\003CTX\252\002\020Caraml.Timber.V1\312\002\020Caraml\\Timber\\V1\342\002\034Caraml\\Timber\\V1\\GPBMetadata\352\002\022Caraml::Timber::V1'
  _LOGTYPE._serialized_start=949
  _LOGTYPE._serialized_end=1056
  _FLUENTDOUTPUTTYPE._serialized_start=1058
  _FLUENTDOUTPUTTYPE._serialized_end=1174
  _KAFKAINITIALOFFSET._serialized_start=1176
  _KAFKAINITIALOFFSET._serialized_end=1302
  _LOGPRODUCER._serialized_start=48
  _LOGPRODUCER._serialized_end=123
  _LOG._serialized_start=126
  _LOG._serialized_end=342
  _FLUENTDOUTPUTBQCONFIG._serialized_start=344
  _FLUENTDOUTPUTBQCONFIG._serialized_end=441
  _FLUENTDCONFIG._serialized_start=444
  _FLUENTDCONFIG._serialized_end=639
  _KAFKACONFIG._serialized_start=642
  _KAFKACONFIG._serialized_end=947
# @@protoc_insertion_point(module_scope)
