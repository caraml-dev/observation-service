/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1FluentdOutputBQConfig struct for V1FluentdOutputBQConfig
type V1FluentdOutputBQConfig struct {
	Project *string `json:"project,omitempty"`
	Dataset *string `json:"dataset,omitempty"`
	Table *string `json:"table,omitempty"`
}

// NewV1FluentdOutputBQConfig instantiates a new V1FluentdOutputBQConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1FluentdOutputBQConfig() *V1FluentdOutputBQConfig {
	this := V1FluentdOutputBQConfig{}
	return &this
}

// NewV1FluentdOutputBQConfigWithDefaults instantiates a new V1FluentdOutputBQConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1FluentdOutputBQConfigWithDefaults() *V1FluentdOutputBQConfig {
	this := V1FluentdOutputBQConfig{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *V1FluentdOutputBQConfig) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FluentdOutputBQConfig) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *V1FluentdOutputBQConfig) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *V1FluentdOutputBQConfig) SetProject(v string) {
	o.Project = &v
}

// GetDataset returns the Dataset field value if set, zero value otherwise.
func (o *V1FluentdOutputBQConfig) GetDataset() string {
	if o == nil || o.Dataset == nil {
		var ret string
		return ret
	}
	return *o.Dataset
}

// GetDatasetOk returns a tuple with the Dataset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FluentdOutputBQConfig) GetDatasetOk() (*string, bool) {
	if o == nil || o.Dataset == nil {
		return nil, false
	}
	return o.Dataset, true
}

// HasDataset returns a boolean if a field has been set.
func (o *V1FluentdOutputBQConfig) HasDataset() bool {
	if o != nil && o.Dataset != nil {
		return true
	}

	return false
}

// SetDataset gets a reference to the given string and assigns it to the Dataset field.
func (o *V1FluentdOutputBQConfig) SetDataset(v string) {
	o.Dataset = &v
}

// GetTable returns the Table field value if set, zero value otherwise.
func (o *V1FluentdOutputBQConfig) GetTable() string {
	if o == nil || o.Table == nil {
		var ret string
		return ret
	}
	return *o.Table
}

// GetTableOk returns a tuple with the Table field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FluentdOutputBQConfig) GetTableOk() (*string, bool) {
	if o == nil || o.Table == nil {
		return nil, false
	}
	return o.Table, true
}

// HasTable returns a boolean if a field has been set.
func (o *V1FluentdOutputBQConfig) HasTable() bool {
	if o != nil && o.Table != nil {
		return true
	}

	return false
}

// SetTable gets a reference to the given string and assigns it to the Table field.
func (o *V1FluentdOutputBQConfig) SetTable(v string) {
	o.Table = &v
}

func (o V1FluentdOutputBQConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Dataset != nil {
		toSerialize["dataset"] = o.Dataset
	}
	if o.Table != nil {
		toSerialize["table"] = o.Table
	}
	return json.Marshal(toSerialize)
}

type NullableV1FluentdOutputBQConfig struct {
	value *V1FluentdOutputBQConfig
	isSet bool
}

func (v NullableV1FluentdOutputBQConfig) Get() *V1FluentdOutputBQConfig {
	return v.value
}

func (v *NullableV1FluentdOutputBQConfig) Set(val *V1FluentdOutputBQConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1FluentdOutputBQConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1FluentdOutputBQConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1FluentdOutputBQConfig(val *V1FluentdOutputBQConfig) *NullableV1FluentdOutputBQConfig {
	return &NullableV1FluentdOutputBQConfig{value: val, isSet: true}
}

func (v NullableV1FluentdOutputBQConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1FluentdOutputBQConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


