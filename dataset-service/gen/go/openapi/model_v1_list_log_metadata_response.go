/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListLogMetadataResponse Response message for ListLogMetadata method.
type V1ListLogMetadataResponse struct {
	// Log metadata stored in configured Dataset Service storage sink.
	LogMetadata []V1LogMetadata `json:"logMetadata,omitempty"`
}

// NewV1ListLogMetadataResponse instantiates a new V1ListLogMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListLogMetadataResponse() *V1ListLogMetadataResponse {
	this := V1ListLogMetadataResponse{}
	return &this
}

// NewV1ListLogMetadataResponseWithDefaults instantiates a new V1ListLogMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListLogMetadataResponseWithDefaults() *V1ListLogMetadataResponse {
	this := V1ListLogMetadataResponse{}
	return &this
}

// GetLogMetadata returns the LogMetadata field value if set, zero value otherwise.
func (o *V1ListLogMetadataResponse) GetLogMetadata() []V1LogMetadata {
	if o == nil || o.LogMetadata == nil {
		var ret []V1LogMetadata
		return ret
	}
	return o.LogMetadata
}

// GetLogMetadataOk returns a tuple with the LogMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListLogMetadataResponse) GetLogMetadataOk() ([]V1LogMetadata, bool) {
	if o == nil || o.LogMetadata == nil {
		return nil, false
	}
	return o.LogMetadata, true
}

// HasLogMetadata returns a boolean if a field has been set.
func (o *V1ListLogMetadataResponse) HasLogMetadata() bool {
	if o != nil && o.LogMetadata != nil {
		return true
	}

	return false
}

// SetLogMetadata gets a reference to the given []V1LogMetadata and assigns it to the LogMetadata field.
func (o *V1ListLogMetadataResponse) SetLogMetadata(v []V1LogMetadata) {
	o.LogMetadata = v
}

func (o V1ListLogMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogMetadata != nil {
		toSerialize["logMetadata"] = o.LogMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListLogMetadataResponse struct {
	value *V1ListLogMetadataResponse
	isSet bool
}

func (v NullableV1ListLogMetadataResponse) Get() *V1ListLogMetadataResponse {
	return v.value
}

func (v *NullableV1ListLogMetadataResponse) Set(val *V1ListLogMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListLogMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListLogMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListLogMetadataResponse(val *V1ListLogMetadataResponse) *NullableV1ListLogMetadataResponse {
	return &NullableV1ListLogMetadataResponse{value: val, isSet: true}
}

func (v NullableV1ListLogMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListLogMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


