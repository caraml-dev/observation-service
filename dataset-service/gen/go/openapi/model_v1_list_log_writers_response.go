/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListLogWritersResponse Response message for ListLogWriters method.
type V1ListLogWritersResponse struct {
	// Log Writers deployed by Dataset Service for a particular CaraML project.
	LogWriters []V1LogWriter `json:"logWriters,omitempty"`
}

// NewV1ListLogWritersResponse instantiates a new V1ListLogWritersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListLogWritersResponse() *V1ListLogWritersResponse {
	this := V1ListLogWritersResponse{}
	return &this
}

// NewV1ListLogWritersResponseWithDefaults instantiates a new V1ListLogWritersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListLogWritersResponseWithDefaults() *V1ListLogWritersResponse {
	this := V1ListLogWritersResponse{}
	return &this
}

// GetLogWriters returns the LogWriters field value if set, zero value otherwise.
func (o *V1ListLogWritersResponse) GetLogWriters() []V1LogWriter {
	if o == nil || o.LogWriters == nil {
		var ret []V1LogWriter
		return ret
	}
	return o.LogWriters
}

// GetLogWritersOk returns a tuple with the LogWriters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListLogWritersResponse) GetLogWritersOk() ([]V1LogWriter, bool) {
	if o == nil || o.LogWriters == nil {
		return nil, false
	}
	return o.LogWriters, true
}

// HasLogWriters returns a boolean if a field has been set.
func (o *V1ListLogWritersResponse) HasLogWriters() bool {
	if o != nil && o.LogWriters != nil {
		return true
	}

	return false
}

// SetLogWriters gets a reference to the given []V1LogWriter and assigns it to the LogWriters field.
func (o *V1ListLogWritersResponse) SetLogWriters(v []V1LogWriter) {
	o.LogWriters = v
}

func (o V1ListLogWritersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogWriters != nil {
		toSerialize["logWriters"] = o.LogWriters
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListLogWritersResponse struct {
	value *V1ListLogWritersResponse
	isSet bool
}

func (v NullableV1ListLogWritersResponse) Get() *V1ListLogWritersResponse {
	return v.value
}

func (v *NullableV1ListLogWritersResponse) Set(val *V1ListLogWritersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListLogWritersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListLogWritersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListLogWritersResponse(val *V1ListLogWritersResponse) *NullableV1ListLogWritersResponse {
	return &NullableV1ListLogWritersResponse{value: val, isSet: true}
}

func (v NullableV1ListLogWritersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListLogWritersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


