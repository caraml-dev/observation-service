/*
 * caraml/timber/v1/dataset_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// V1FluentdOutputType : - FLUENTD_OUTPUT_TYPE_STDOUT: Fluentd will publish logs to standard output  - FLUENTD_OUTPUT_TYPE_BQ: Fluentd will flush logs to BigQuery
type V1FluentdOutputType string

// List of V1FluentdOutputType
const (
	V1FLUENTDOUTPUTTYPE_UNSPECIFIED V1FluentdOutputType = "FLUENTD_OUTPUT_TYPE_UNSPECIFIED"
	V1FLUENTDOUTPUTTYPE_STDOUT V1FluentdOutputType = "FLUENTD_OUTPUT_TYPE_STDOUT"
	V1FLUENTDOUTPUTTYPE_BQ V1FluentdOutputType = "FLUENTD_OUTPUT_TYPE_BQ"
)

// AssertV1FluentdOutputTypeRequired checks if the required fields are not zero-ed
func AssertV1FluentdOutputTypeRequired(obj V1FluentdOutputType) error {
	return nil
}

// AssertRecurseV1FluentdOutputTypeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V1FluentdOutputType (e.g. [][]V1FluentdOutputType), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseV1FluentdOutputTypeRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV1FluentdOutputType, ok := obj.(V1FluentdOutputType)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertV1FluentdOutputTypeRequired(aV1FluentdOutputType)
	})
}
