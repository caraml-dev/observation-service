/*
 * caraml/timber/v1/dataset_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type V1FluentdConfig struct {

	Type V1FluentdOutputType `json:"type,omitempty"`

	Host string `json:"host,omitempty"`

	Port int32 `json:"port,omitempty"`

	Tag string `json:"tag,omitempty"`

	Config V1FluentdOutputBqConfig `json:"config,omitempty"`
}

// AssertV1FluentdConfigRequired checks if the required fields are not zero-ed
func AssertV1FluentdConfigRequired(obj V1FluentdConfig) error {
	if err := AssertV1FluentdOutputBqConfigRequired(obj.Config); err != nil {
		return err
	}
	return nil
}

// AssertRecurseV1FluentdConfigRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V1FluentdConfig (e.g. [][]V1FluentdConfig), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseV1FluentdConfigRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV1FluentdConfig, ok := obj.(V1FluentdConfig)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertV1FluentdConfigRequired(aV1FluentdConfig)
	})
}
