/*
 * caraml/timber/v1/dataset_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// V1ObservationServiceDataSinkType : - OBSERVATION_SERVICE_DATA_SINK_TYPE_NOOP: No-Op represents no need to flush logs to any data sink  - OBSERVATION_SERVICE_DATA_SINK_TYPE_STDOUT: Observation Service will publish logs to standard output  - OBSERVATION_SERVICE_DATA_SINK_TYPE_KAFKA: Observation Service will flush logs to a Kafka sink  - OBSERVATION_SERVICE_DATA_SINK_TYPE_FLUENTD: Observation Service will flush logs to Fluentd
type V1ObservationServiceDataSinkType string

// List of V1ObservationServiceDataSinkType
const (
	V1OBSERVATIONSERVICEDATASINKTYPE_UNSPECIFIED V1ObservationServiceDataSinkType = "OBSERVATION_SERVICE_DATA_SINK_TYPE_UNSPECIFIED"
	V1OBSERVATIONSERVICEDATASINKTYPE_NOOP V1ObservationServiceDataSinkType = "OBSERVATION_SERVICE_DATA_SINK_TYPE_NOOP"
	V1OBSERVATIONSERVICEDATASINKTYPE_STDOUT V1ObservationServiceDataSinkType = "OBSERVATION_SERVICE_DATA_SINK_TYPE_STDOUT"
	V1OBSERVATIONSERVICEDATASINKTYPE_KAFKA V1ObservationServiceDataSinkType = "OBSERVATION_SERVICE_DATA_SINK_TYPE_KAFKA"
	V1OBSERVATIONSERVICEDATASINKTYPE_FLUENTD V1ObservationServiceDataSinkType = "OBSERVATION_SERVICE_DATA_SINK_TYPE_FLUENTD"
)

// AssertV1ObservationServiceDataSinkTypeRequired checks if the required fields are not zero-ed
func AssertV1ObservationServiceDataSinkTypeRequired(obj V1ObservationServiceDataSinkType) error {
	return nil
}

// AssertRecurseV1ObservationServiceDataSinkTypeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V1ObservationServiceDataSinkType (e.g. [][]V1ObservationServiceDataSinkType), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseV1ObservationServiceDataSinkTypeRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV1ObservationServiceDataSinkType, ok := obj.(V1ObservationServiceDataSinkType)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertV1ObservationServiceDataSinkTypeRequired(aV1ObservationServiceDataSinkType)
	})
}
