/*
 * caraml/timber/v1/dataset_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// V1ListObservationServicesResponse - Response message for ListObservationServices method.
type V1ListObservationServicesResponse struct {

	// Observation Services deployed by Dataset Service for a particular CaraML project.
	ObservationServices []V1ObservationServiceConfig `json:"observationServices,omitempty"`
}

// AssertV1ListObservationServicesResponseRequired checks if the required fields are not zero-ed
func AssertV1ListObservationServicesResponseRequired(obj V1ListObservationServicesResponse) error {
	for _, el := range obj.ObservationServices {
		if err := AssertV1ObservationServiceConfigRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseV1ListObservationServicesResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V1ListObservationServicesResponse (e.g. [][]V1ListObservationServicesResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseV1ListObservationServicesResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV1ListObservationServicesResponse, ok := obj.(V1ListObservationServicesResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertV1ListObservationServicesResponseRequired(aV1ListObservationServicesResponse)
	})
}
