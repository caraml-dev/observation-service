/*
 * caraml/timber/v1/dataset_service.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// V1LogWriterType : - LOG_WRITER_TYPE_FLUENTD: Fluentd will be used for logging
type V1LogWriterType string

// List of V1LogWriterType
const (
	V1LOGWRITERTYPE_UNSPECIFIED V1LogWriterType = "LOG_WRITER_TYPE_UNSPECIFIED"
	V1LOGWRITERTYPE_FLUENTD V1LogWriterType = "LOG_WRITER_TYPE_FLUENTD"
)

// AssertV1LogWriterTypeRequired checks if the required fields are not zero-ed
func AssertV1LogWriterTypeRequired(obj V1LogWriterType) error {
	return nil
}

// AssertRecurseV1LogWriterTypeRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of V1LogWriterType (e.g. [][]V1LogWriterType), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseV1LogWriterTypeRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aV1LogWriterType, ok := obj.(V1LogWriterType)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertV1LogWriterTypeRequired(aV1LogWriterType)
	})
}
