/*
caraml/timber/v1/dataset_service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1UpdateLogWriterResponse Response message for UpdateLogWriter method.
type V1UpdateLogWriterResponse struct {
	LogWriter *V1LogWriter `json:"logWriter,omitempty"`
}

// NewV1UpdateLogWriterResponse instantiates a new V1UpdateLogWriterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1UpdateLogWriterResponse() *V1UpdateLogWriterResponse {
	this := V1UpdateLogWriterResponse{}
	return &this
}

// NewV1UpdateLogWriterResponseWithDefaults instantiates a new V1UpdateLogWriterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1UpdateLogWriterResponseWithDefaults() *V1UpdateLogWriterResponse {
	this := V1UpdateLogWriterResponse{}
	return &this
}

// GetLogWriter returns the LogWriter field value if set, zero value otherwise.
func (o *V1UpdateLogWriterResponse) GetLogWriter() V1LogWriter {
	if o == nil || o.LogWriter == nil {
		var ret V1LogWriter
		return ret
	}
	return *o.LogWriter
}

// GetLogWriterOk returns a tuple with the LogWriter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1UpdateLogWriterResponse) GetLogWriterOk() (*V1LogWriter, bool) {
	if o == nil || o.LogWriter == nil {
		return nil, false
	}
	return o.LogWriter, true
}

// HasLogWriter returns a boolean if a field has been set.
func (o *V1UpdateLogWriterResponse) HasLogWriter() bool {
	if o != nil && o.LogWriter != nil {
		return true
	}

	return false
}

// SetLogWriter gets a reference to the given V1LogWriter and assigns it to the LogWriter field.
func (o *V1UpdateLogWriterResponse) SetLogWriter(v V1LogWriter) {
	o.LogWriter = &v
}

func (o V1UpdateLogWriterResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogWriter != nil {
		toSerialize["logWriter"] = o.LogWriter
	}
	return json.Marshal(toSerialize)
}

type NullableV1UpdateLogWriterResponse struct {
	value *V1UpdateLogWriterResponse
	isSet bool
}

func (v NullableV1UpdateLogWriterResponse) Get() *V1UpdateLogWriterResponse {
	return v.value
}

func (v *NullableV1UpdateLogWriterResponse) Set(val *V1UpdateLogWriterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1UpdateLogWriterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1UpdateLogWriterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1UpdateLogWriterResponse(val *V1UpdateLogWriterResponse) *NullableV1UpdateLogWriterResponse {
	return &NullableV1UpdateLogWriterResponse{value: val, isSet: true}
}

func (v NullableV1UpdateLogWriterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1UpdateLogWriterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


