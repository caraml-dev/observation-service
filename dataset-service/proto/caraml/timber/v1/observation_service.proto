syntax = "proto3";

package caraml.timber.v1;
option go_package = "github.com/caraml-dev/timber/dataset-service/api/caraml/timber/v1;api";

import "google/protobuf/timestamp.proto";
import "caraml/timber/v1/status.proto";
import "caraml/timber/v1/kafka.proto";

// Data source where Observation logs should be retrieved from
enum ObservationServiceDataSourceType {
    OBSERVATION_SERVICE_DATA_SOURCE_TYPE_UNSPECIFIED = 0;
    // No-Op represents no need to fetch logs from any data source, this should be selected if
    // Observation Service should be deployed for just the eager API
    OBSERVATION_SERVICE_DATA_SOURCE_TYPE_EAGER = 1;
    // Observation Service will poll logs from a Kafka source
    OBSERVATION_SERVICE_DATA_SOURCE_TYPE_KAFKA = 2;
}

// Configurations of Data source where Observation logs should be retrieved from
message Source {
    // Data source of the observation service
    ObservationServiceDataSourceType type = 1;
    // Kafka configuration, required if the source type is SOURCE_TYPE_KAFKA
    KafkaConfig kafka = 2;
}

// ObservationServiceConfig describes details of a Observation Service
message ObservationService {
    // Project id that owns the observation service
    int64 project_id = 1;
    // Observation service id
    int64 id = 2;
    // Observation service name
    string name = 3;
    // Configuration for pull-based Observation Service data source.
    Source source = 4;
    // Status of the observation service
    Status status = 10;
    // Creation timestamp
    google.protobuf.Timestamp create_time = 11;
    // Last update timestamp
    google.protobuf.Timestamp update_time = 12;
}

