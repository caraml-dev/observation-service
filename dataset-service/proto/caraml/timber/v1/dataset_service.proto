syntax = "proto3";

package caraml.timber.v1;
option go_package = "github.com/caraml-dev/timber/dataset-service/api/caraml/timber/v1;api";

import "google/api/annotations.proto";

import "caraml/timber/v1/log.proto";
import "caraml/timber/v1/log_writer.proto";
import "caraml/timber/v1/observation_service.proto";


// Service for performing:
// 1. Deploy/undeploy log writer deployment based on the availability of model and router deployment. 
// 2. Synchronize the access control list of CaraML projects to the corresponding BQ dataset to avoid maintaining separate processes to obtain access to the dataset.
// 3. Store and provide access to the log table metadata produced in CaraML. 
// 4. Store and provide read only access to the list of log writers it manages.
// 5. Store and provide read only access to the list of observation services it manages.
service DatasetService {
    // ListLogMetadata return paginated list of log metadata under a project and filtered by query string.
    rpc ListLogMetadata(ListLogMetadataRequest) returns (ListLogMetadataResponse) {
        option (google.api.http) = {
            get: "/v1/projects/{project_id}/log_metadata"
        };
    };
    // GetLogMetadata returns metadata of a log.
    rpc GetLogMetadata(GetLogMetadataRequest) returns (GetLogMetadataResponse) {
        option (google.api.http) = {
            get: "/v1/projects/{project_id}/log_metadata/{id}"
        };
    };
    // ListLogWriters return paginated list of log writers under a project and filtered by query string.
    rpc ListLogWriters(ListLogWritersRequest) returns (ListLogWritersResponse) {
        option (google.api.http) = {
            get: "/v1/projects/{project_id}/log_writers"
        };
    };
    // GetLogWriter return details of the log writer deployment.
    rpc GetLogWriter(GetLogWriterRequest) returns (GetLogWriterResponse) {
        option (google.api.http) = {
            get: "/v1/projects/{project_id}/log_writers/{id}"
        };
    };
    // CreateLogWriter creates a new log writer deployment as specified by the details given in the request body. 
    rpc CreateLogWriter(CreateLogWriterRequest) returns (CreateLogWriterResponse) {
        option (google.api.http) = {
            post: "/v1/projects/{project_id}/log_writers"
            body: "*"
        };
    };
    // UpdateLogWriter updates an existing log writer deployment as specified by the details given in the request body. 
    rpc UpdateLogWriter(UpdateLogWriterRequest) returns (UpdateLogWriterResponse) {
        option (google.api.http) = {
            put: "/v1/projects/{project_id}/log_writers/{id}"
            body: "*"
        };
    };
    // ListObservationServices return paginated list of observation services under a project and filtered by query string.
    rpc ListObservationServices(ListObservationServicesRequest) returns (ListObservationServicesResponse) {
        option (google.api.http) = {
            get: "/v1/projects/{project_id}/observation_services"
        };
    };
    // GetObservationService return details of the observation service deployment.
    rpc GetObservationService(GetObservationServiceRequest) returns (GetObservationServiceResponse) {
        option (google.api.http) = {
            get: "/v1/projects/{project_id}/observation_services/{id}"
        };
    };
    // CreateObservationService creates a new observation service deployment as specified by the details given in the request body. 
    rpc CreateObservationService(CreateObservationServiceRequest) returns (CreateObservationServiceResponse) {
        option (google.api.http) = {
            post: "/v1/projects/{project_id}/observation_services"
            body: "*"
        };
    };
    // UpdateObservationService updates an existing observation service deployment as specified by the details given in the request body. 
    rpc UpdateObservationService(UpdateObservationServiceRequest) returns (UpdateObservationServiceResponse) {
        option (google.api.http) = {
            put: "/v1/projects/{project_id}/observation_services/{id}"
            body: "*"
        };
    };
};

// Request message for ListLogMetadata method.
message ListLogMetadataRequest {
    // The CaraML project ID to retrieve log metadata from.
    int64 project_id = 1;
}

// Response message for ListLogMetadata method.
message ListLogMetadataResponse {
    // Log metadata stored in configured Dataset Service storage sink.
    repeated LogMetadata log_metadata = 1;
}

// Request message for GetLogMetadata method.
message GetLogMetadataRequest {
    // The CaraML project ID to retrieve log metadata from.
    int64 project_id = 1;
    // The ID of the log metadata to retrieve.
    int64 id = 2;
}

// Response message for GetLogMetadata method.
message GetLogMetadataResponse {
    // Single log metadata stored in configured Dataset Service storage sink.
    LogMetadata log_metadata = 1;
}

/******************************************
************     Log Writer    ************
*******************************************/
// Request message for ListLogWriters method.
message ListLogWritersRequest {
    // The CaraML project ID to retrieve log resource from.
    int64 project_id = 1;
}

// Response message for ListLogWriters method.
message ListLogWritersResponse {
    // Log Writers deployed by Dataset Service for a particular CaraML project.
    repeated LogWriter log_writers = 1;
}

// Request message for GetLogWriter method.
message GetLogWriterRequest {
    // The CaraML project ID to write log resource from.
    int64 project_id = 1;
    // The ID of the Log Writer resource to retrieve.
    int64 id = 2;
}

// Response message for GetLogWriter method.
message GetLogWriterResponse {
    // Details of single Log Writer deployed by Dataset Service.
    LogWriter log_writer = 1;
}

// Request message for CreateLogWriter method.
message CreateLogWriterRequest {
    // The CaraML project ID to write log resource from.
    int64 project_id = 1;
    // Details of single Log Writer to be deployed by Dataset Service.
    LogWriter log_writer = 2;
}

// Response message for CreateLogWriter method.
message CreateLogWriterResponse {
    // Details of single Log Writer deployed by Dataset Service.
    LogWriter log_writer = 1;
}

// Request message for UpdateLogWriter method.
message UpdateLogWriterRequest {
    // The CaraML project ID to write log resource from.
    int64 project_id = 1;
    // The ID of Log Writer to update.
    int64 id = 2;
    // Details of single Log Writer to be updated by Dataset Service.
    LogWriter log_writer = 3;
}

// Response message for UpdateLogWriter method.
message UpdateLogWriterResponse {
    // Details of single Log Writer updated by Dataset Service.
    LogWriter log_writer = 1;
}

/******************************************
*********** Observation Service ***********
*******************************************/
// Request message for ListObservationServices method.
message ListObservationServicesRequest {
    // The CaraML project ID to retrieve log resource from.
    int64 project_id = 1;
}

// Response message for ListObservationServices method.
message ListObservationServicesResponse {
    // Observation Services deployed by Dataset Service for a particular CaraML project.
    repeated ObservationService observation_services = 1;
}

// Request message for GetObservationService method.
message GetObservationServiceRequest {
    // The CaraML project ID to retrieve log resource from.
    int64 project_id = 1;
    // The ID of the Observation Service resource to retrieve.
    int64 id = 2;
}

// Response message for GetObservationService method.
message GetObservationServiceResponse {
    // Details of single Observation Service deployed by Dataset Service.
    ObservationService observation_service = 1;
}

// Request message for CreateObservationService method.
message CreateObservationServiceRequest {
    // The CaraML project ID to write log resource from.
    int64 project_id = 1;
    // Details of single Observation Service to be deployed by Dataset Service.
    ObservationService observation_service = 3;
}

// Response message for CreateObservationService method.
message CreateObservationServiceResponse {
    // Details of single Observation Service deployed by Dataset Service.
    ObservationService observation_service = 1;
}

// Request message for UpdateObservationService method.
message UpdateObservationServiceRequest {
    // The CaraML project ID to write log resource from.
    int64 project_id = 1;
    // The ID of Log Writer to update.
    int64 id = 2;
    // Details of single Observation Service to be updated by Dataset Service.
    ObservationService observation_service = 3;
}

// Response message for UpdateObservationService method.
message UpdateObservationServiceResponse {
    // Details of single Observation Service updated by Dataset Service.
    ObservationService observation_service = 1;
}
